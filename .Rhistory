data <- read.csv("data/table1.csv")
bondEnergy <- read.csv("data/table2.csv")
gasLaw <- read.csv("data/table3.csv")
conversion <- read.csv("data/table4.csv")
setwd("~/Desktop/CHEM E 457/Project")
data <- read.csv("data/table1.csv")
bondEnergy <- read.csv("data/table2.csv")
gasLaw <- read.csv("data/table3.csv")
conversion <- read.csv("data/table4.csv")
conversion <- conversion %>%
mutate("Diox" = 100 - conversion) %>%
mutate("Hyd" = 300 - conversion) %>%
mutate("MeOH" = conversion) %>%
mutate("Wat" = conversion) %>%
mutate("Total" = Diox + Hyd + MeOH + Wat) %>%
mutate("pDiox" = Diox / Total) %>%
mutate("pHyd" = Hyd / Total) %>%
mutate("pMeOH" = MeOH / Total) %>%
mutate("pWat" = Wat / Total) %>%
mutate("Kp" = (pMeOH * pWat) / (pDiox * pHyd^3)) %>%
mutate("log10Kp" = log10(Kp)) %>%
mutate("lnKp" = log(Kp))
library(dplyr)
library(ggplot2)
library(plotly)
conversion <- conversion %>%
mutate("Diox" = 100 - conversion) %>%
mutate("Hyd" = 300 - conversion) %>%
mutate("MeOH" = conversion) %>%
mutate("Wat" = conversion) %>%
mutate("Total" = Diox + Hyd + MeOH + Wat) %>%
mutate("pDiox" = Diox / Total) %>%
mutate("pHyd" = Hyd / Total) %>%
mutate("pMeOH" = MeOH / Total) %>%
mutate("pWat" = Wat / Total) %>%
mutate("Kp" = (pMeOH * pWat) / (pDiox * pHyd^3)) %>%
mutate("log10Kp" = log10(Kp)) %>%
mutate("lnKp" = log(Kp))
View(conversion)
KpPlot <- ggplot(data = conversion) +
geom_point(mapping = aes(x = temp, y = log10Kp, color = pressure)) +
geom_point(data = ReactionOne,
mapping = aes(x = temp, y = log10Kp)) +
ggtitle("Equilibrium Constant (Pressure) for Reaction One from Conversion Data") +
xlab("Temperature (Celcius)") +
ylab("Kp (atm^-2) Log10 Scale")
library(dplyr)
library(ggplot2)
library(plotly)
data <- read.csv("data/table1.csv")
bondEnergy <- read.csv("data/table2.csv")
gasLaw <- read.csv("data/table3.csv")
conversion <- read.csv("data/table4.csv")
# Problem 1
# a. (Units are kJ/mol)
source("scripts/partA.R")
deltaDRxn1 <- disMeOH + disWat - disDiox - 3 * disHyd # kJ/mol
print(deltaDRxn1)
# b.i.
source("scripts/partitions.R")
source("scripts/partB.R")
# Kp for Reaction 1
R <- 0.00814 # kJ/mol
k2 <- (8.206e-5) / (6.022e23) # R/N Units are m^3 atm / K
KpRxn1 <- function(temp) {
(k2 * temp)^-2 * qTransRxn1(temp) * qVibRxn1(temp) * qRotRxn1(temp) *
qEleRxn1 * exp(deltaDRxn1 / (R * temp))
}
# b.ii.
ggplotly(KpPlotRxn1)
# b.iii.
ggplotly(HoffPlotRxn1)
print(deltaHRxn1)
# b.iV.
print(deltaHPrimeRxn1)
# c.i.
source("scripts/partC.R")
print(deltaDRxn2)
# c.ii.
# Kp for Reaction 2
R <- 0.00814 # kJ/mol
k2 <- (8.206e-5) / (6.022e23) # R/N Units are m^3 atm / K
KpRxn1 <- function(T) {
(k2 * T)^-2 * qTransRxn1(T) * qVibRxn1(T) * qRotRxn1(T) *
qEleRxn1 * exp(deltaDRxn1 / (R * T))
}
# c.iii.
ggplotly(KpPlotRxn2)
# c.iv.
ggplotly(HoffPlotRxn2)
print(deltaHRxn2)
# c.v.
print(deltaHPrimeRxn2)
# c.vi.
ggplotly(hPlotRxn2)
ggplotly(uPlotRxn2)
ggplotly(sPlotRxn2)
# c.vii.
# At equilibrium deltaU is equal to zero. That point is at 510 degrees C.
# d.i
source("scripts/partD.R")
ggplotly(KpPlot)
ggplotly(KPlot)
source("scripts/partD.R")
ggplotly(KpPlot)
